##== REDIS
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: unir
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      imagePullSecrets:
        - name: acr-secret
      containers:
        - name: redis
          image: terraformcp2.azurecr.io/ms/redis:casopractico2
          imagePullPolicy: "Always"
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-srv
  namespace: unir
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
  namespace: unir
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-path
  hostPath:
    path: "/mnt/data/redis"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: unir
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
##== APP VOTE
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  namespace: unir
  labels:
    app: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      imagePullSecrets:
        - name: acr-secret
      containers:
        - name: vote
          image: terraformcp2.azurecr.io/app/azure-vote-front:casopractico2
          imagePullPolicy: "Always"
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          env:
            - name: REDIS
              value: "redis-srv"
---
apiVersion: v1
kind: Service
metadata:
  name: vote-srv
  namespace: unir
  labels:
    run: vote-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: vote

